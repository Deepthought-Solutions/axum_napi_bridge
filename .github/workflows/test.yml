name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Install NAPI-rs CLI
        run: npm install -g @napi-rs/cli
      - name: Build
        run: napi build --release
      - name: Run tests
        run: 
          cd sample
          npm test

  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
      - name: Install Phusion Passenger
        run: gem install passenger
      - name: Install dependencies
        run: |
          npm install -g @napi-rs/cli
          cd sample
          npm install
      - name: Build sample app
        run: |
          cd sample
          napi build --release
      - name: Run unit tests
        run: |
          cd sample
          npm test
      - name: Run end-to-end test
        run: |
          cd sample
          passenger start --app-type node --startup-file server.js &

          # Wait for the server to be ready
          timeout=30
          while ! curl -s http://127.0.0.1:3000/test > /dev/null; do
            sleep 1
            timeout=$((timeout-1))
            if [ $timeout -eq 0 ]; then
              echo "Server failed to start in time."
              exit 1
            fi
          done

          curl http://127.0.0.1:3000/test | grep "This is a test route."

  # benchmark:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'
  #     - name: Install dependencies
  #       run: |
  #         npm install -g @napi-rs/cli
  #         cd sample
  #         npm install
  #     - name: Build sample app
  #       run: |
  #         cd sample
  #         napi build
  #     - name: Run benchmark
  #       run: |
  #         cd sample
  #         npm run bench
