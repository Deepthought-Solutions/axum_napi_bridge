# Dockerfile for running the axum_napi_bridge sample with Phusion Passenger + Apache  
# Using passenger-nodejs base which includes Passenger but configuring Apache
FROM ghcr.io/phusion/passenger-nodejs:3.0.0

# Install Apache2 and Passenger Apache module
RUN apt-get update && \
    apt-get install -y apache2 apache2-dev libapache2-mod-passenger && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Configure Apache with Passenger and headers modules
RUN a2enmod passenger && a2enmod headers

# Set up the application directory
RUN mkdir -p /home/app
WORKDIR /home/app

# Copy the pre-built native module and other necessary files
COPY index.cjs ./
COPY index.node ./
COPY index.node.d.ts ./
COPY server.cjs ./

# Create a minimal package.json without "type": "module" for CommonJS compatibility
RUN echo '{"name": "axum-napi-docker", "version": "1.0.0"}' > package.json

# Copy Passenger Apache configuration
COPY apache_passenger.conf /etc/apache2/sites-enabled/000-default.conf

# Remove default apache sites
RUN rm -f /etc/apache2/sites-enabled/000-default.conf.disabled /etc/apache2/sites-enabled/default-ssl.conf

# Create app user and set permissions (check if user exists first)
RUN getent group app || groupadd -r app
RUN getent passwd app || useradd -r -g app app
RUN chown -R app:app /home/app

# Disable nginx and enable apache2 service
RUN touch /etc/service/nginx/down
RUN mkdir -p /etc/service/apache2
RUN echo '#!/bin/bash\nexec /usr/sbin/apache2ctl -DFOREGROUND' > /etc/service/apache2/run && \
    chmod +x /etc/service/apache2/run

# Expose port
EXPOSE 80

# Use Phusion's init system
CMD ["/sbin/my_init"]